/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core;

import db.DBWorker;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.ResultSetTableModel;

/**
 *
 * @author Paulo Lima
 */
public class dominioForm extends javax.swing.JFrame {

    /**
     * Creates new form dominioForm
     */
    public dominioForm() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdicionarDominio = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtDesignacaoDominio = new javax.swing.JTextField();
        txtNovoDominio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnAlterarDominio = new javax.swing.JButton();
        btnRemoverDominio = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnListarDominios = new javax.swing.JToggleButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAdicionarDominio.setText("2.1 Adicionar Dominio ");
        btnAdicionarDominio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarDominioActionPerformed(evt);
            }
        });

        jLabel3.setText("Designação:");

        txtNovoDominio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNovoDominioActionPerformed(evt);
            }
        });

        jLabel6.setText("Novo Domínio:");

        btnAlterarDominio.setText("2.4 Alterar Domínio");
        btnAlterarDominio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarDominioActionPerformed(evt);
            }
        });

        btnRemoverDominio.setText("2.2 Remover Dominio");
        btnRemoverDominio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverDominioActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        btnListarDominios.setText("2.3 Listar Dominios");
        btnListarDominios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDominiosActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRemoverDominio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAlterarDominio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdicionarDominio, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDesignacaoDominio, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(txtNovoDominio)
                            .addComponent(btnListarDominios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnAdicionarDominio, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDesignacaoDominio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAlterarDominio, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNovoDominio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRemoverDominio, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(btnListarDominios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(btnVoltar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarDominioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarDominioActionPerformed
        try {
            // inserir domínio na base de dados
            String sDesignacao = txtDesignacaoDominio.getText();
            String sSQL = "INSERT into domínio (designacao) values ('" + sDesignacao + "')";

            String user = "root";
            String password = "";
            String baseDados = "registopresencas";
            String server = "127.0.0.1";
            DBWorker db;
            db = new DBWorker(server, user, password, baseDados);
            int r = db.executeUpdate(sSQL);
        } catch (SQLException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAdicionarDominioActionPerformed

    private void txtNovoDominioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNovoDominioActionPerformed

    }//GEN-LAST:event_txtNovoDominioActionPerformed

    private void btnAlterarDominioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarDominioActionPerformed
        try {
            //modificar o nome do domínio selecionado
            int p = jTable1.getSelectedRow();

            int PK = Integer.parseInt((String) jTable1.getValueAt(p, 0));

            String s1 = txtNovoDominio.getText();

            String sSQL = "UPDATE domínio set designacao = '" + s1
                    + "'where id = " + PK;
            JOptionPane.showMessageDialog(this, "Domínio alterado com sucesso");
            String user = "root";
            String password = "";
            String baseDados = "registopresencas";
            String server = "127.0.0.1";
            DBWorker db;
            db = new DBWorker(server, user, password, baseDados);
            int r = db.executeUpdate(sSQL);
        } catch (SQLException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAlterarDominioActionPerformed

    private void btnRemoverDominioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverDominioActionPerformed
        // eliminar o domínio selecionado (na table):
        Object[] options = {"Sim", "Não"};
        int dialogResult;
        dialogResult = JOptionPane.showOptionDialog(
                null,
                "Confirma a eliminação?",
                "ATENÇÃO!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]
        );
        if (dialogResult == 0) {
            try {

                int p = jTable1.getSelectedRow();
                int PK = Integer.parseInt((String) jTable1.getValueAt(p, 0));
                String sSQL = "DELETE from domínio where id = " + PK;
                String user = "root";
                String password = "";
                String baseDados = "registopresencas";
                String server = "127.0.0.1";
                DBWorker db;
                db = new DBWorker(server, user, password, baseDados);
                int r = db.executeUpdate(sSQL);
            } catch (SQLException ex) {
                Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnRemoverDominioActionPerformed

    private void btnListarDominiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDominiosActionPerformed
        //listar os dominios existentes na base de dados
        try {
            String user = "root";
            String password = "";
            String baseDados = "registopresencas";
            String server = "127.0.0.1";
            DBWorker db;
            db = new DBWorker(server, user, password, baseDados);
            ResultSet rs = db.executeQuery("SELECT * FROM domínio order by id asc");
            ResultSetTableModel m = new ResultSetTableModel(rs);
            jTable1.setModel(m);
        } catch (SQLException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnListarDominiosActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        aRPform voltar = new aRPform();
        voltar.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnVoltarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            int numLinha = jTable1.getSelectedRow();
            if (numLinha != -1) {

                Object[] options = {"Sim", "Não"};
                int dialogResult;
                dialogResult = JOptionPane.showOptionDialog(
                        null,
                        "Confirma a eliminação?",
                        "ATENÇÃO!",
                        JOptionPane.DEFAULT_OPTION,
                        JOptionPane.WARNING_MESSAGE,
                        null,
                        options,
                        options[0]
                );
                if (dialogResult == 0) {
                    try {

                        int p = jTable1.getSelectedRow();
                        int PK = Integer.parseInt((String) jTable1.getValueAt(p, 0));
                        String sSQL = "DELETE from domínio where id = " + PK;
                        String user = "root";
                        String password = "";
                        String baseDados = "registopresencas";
                        String server = "127.0.0.1";
                        DBWorker db;
                        db = new DBWorker(server, user, password, baseDados);
                        int r = db.executeUpdate(sSQL);
                    } catch (SQLException ex) {
                        Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IllegalAccessException ex) {
                        Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (InstantiationException ex) {
                        Logger.getLogger(aRPform.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }

        }
    }//GEN-LAST:event_jTable1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dominioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dominioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dominioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dominioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dominioForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarDominio;
    private javax.swing.JButton btnAlterarDominio;
    private javax.swing.JToggleButton btnListarDominios;
    private javax.swing.JButton btnRemoverDominio;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtDesignacaoDominio;
    private javax.swing.JTextField txtNovoDominio;
    // End of variables declaration//GEN-END:variables
}
